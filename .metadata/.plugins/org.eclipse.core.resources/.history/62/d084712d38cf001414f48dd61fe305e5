/**
  Headerfile:       GAP_HCI.h


  Revised:        $Date: 2015-3-21   (Sun, 1 Mar 2015) $
  Revision:       $Revision: 1 $
  Author: Alexander D'Abreu
  Description:    GAP and GATT BLE commands and event processing functions.

**************************************************************************************************/
#ifndef BLE_HCI_H_
#define BLE_HCI_H_

/*********************************************************************
 * INCLUDES
 */
#include "Scheduler.h"


/*********************************************************************
 * CONSTANTS
 */

//GAP OPCodes(Low Byte) - 0x06XX
#define GAP_DeviceInitDone 0x00
#define GAP_DeviceDiscovery 0x01
#define GAP_LinkEstablished 0x05
#define GAP_LinkTerminated 0x06
#define GAP_SignatureUpdated 0x09
#define GAP_DeviceInformation 0x0D
#define	GAP_PassKeyNeeded 0x0B
#define	GAP_BondComplete 0x0E
#define GAP_AuthenticationComplete 0x0A
#define GAP_CommandStatus 0x7F

//GATT OpCodes(LowByte) - 0x





//Event Flags
#define GAP_EVT_EVT BIT0
#define GAP_CMD_EVT BIT1
#define GATT_EVT_EVT BIT2
#define GATT_CMD_EVT BIT3


#define NUMOFDEVICES 6




//GAP Connection States
#define GAP_FREEDEVICE 100
#define GAP_CONNECTEDDEVICE 101
#define GAP_DISCONNECTEDDEVICE	102
#define GAP_PAIREDDEVICE	103
#define GAP_BONDEDDEVICE	104
#define GAP_DISCOVEREDDEVICE	105

/*********************************************************************
 * TYPEDEFS
 */

typedef struct{
	uint8 GAPState;
	uint8 CMDStatus;
	uint8 *devAddr;
	uint8 *connHandle;
    uint8 *IRK;
    uint8 *CSRK;
}BLEDevice_s;




/*********************************************************************
 * System Events
 */

/*********************************************************************
 * Global System Messages
 */

/*********************************************************************
 * MACROS
 */



/*********************************************************************
 * GLOBAL VARIABLES
 */

/*********************************************************************
 * FUNCTIONS
 */

extern uint8 BLE_ProcessEvent(uint8 taskId,uint8 events);

extern void updateDeviceDB(uint8 GAPState,uint8 CMDStatus,uint8 *devAddr,uint8 *connHandle,uint8 *IRK, uint8 *CSRK);

extern uint8 compareArray(uint8 *arr1,uint8 *arr2,uint8 length);
extern BLEDevice_s *findDevice(uint8 * devAddr);
externvoid BLE_Init(void);

/*********************************************************************
*********************************************************************/



#endif /* BLE_HCI_H_ */


